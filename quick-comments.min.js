riot.tag("newcomment",'<div class="qc-user qc-logged-out"> <p>Sign in to post a comment.</p> <ul class="qc-login-opts"> <li each="{ opts.providers }"> <a href="#" class="provicer-{ name }" onclick="{ login }">{ name }</a> </li> </ul> </div> <form onsubmit="{ comment }">    <textarea rows="1" class="gc-new-body form-control disabled"></textarea>\n <button class="submit">Submit</button> </form> <hr></hr>',function(){this.comment=function(){if(!this.spamFree)throw"Can't save spammy comments";FB.child("comments").child(pageID).push(comment,callback)}.bind(this),this.spamFree=function(){return!0}.bind(this)}),riot.tag("comment",'<div class="qc-body">{ body }</div> <div class="qc-author"> <a href="mailto:{ author.email }">{ author.name }</a> </div> <hr></hr>',function(a){this.body=a.body,this.author=a.author}),riot.tag("newcomment",'<div class="qc-user qc-logged-out"> <p>Sign in to post a comment.</p> <ul class="qc-login-opts"> <li each="{ parent.providers }"> <a href="#" class="provicer-{ name }" onclick="{ login }">{ name }</a> </li> </ul> </div> <form>    <textarea rows="{ height }" class="gc-new-body form-control" name="body" onfocus="{ grow }"></textarea>\n <button class="submit" name="submit" onclick="{ send }">Submit</button> </form> <hr></hr>',function(){this.height=1,this.send=function(){if(!this.spamFree)throw"Can't save spammy comments";console.log({user:parent.user,body:this.body.value,time:(new Date).toISOString()})}.bind(this),this.spamFree=function(){return!0}.bind(this),this.grow=function(){this.height=5}.bind(this)}),riot.tag("commentnew",'<div class="qc-user qc-logged-out"> <p>Sign in to post a comment.</p> <ul class="qc-login-opts"> <li each="{ opts.providers }"> <a href="#" class="provicer-{ name }" onclick="{ login }">{ name }</a> </li> </ul> </div> <form onsubmit="{ comment }">    <textarea rows="1" class="gc-new-body form-control disabled"></textarea>\n <button class="submit">Submit</button> </form> <hr></hr>',function(){this.comment=function(){if(!this.spamFree)throw"Can't save spammy comments";FB.child("comments").child(pageID).push(comment,callback)}.bind(this),this.spamFree=function(){return!0}.bind(this)}),riot.tag("comment",'<div class="qc-body">{ body }</div> <div class="qc-author"> <a href="mailto:{ author.email }">{ author.name }</a> </div> <hr></hr>',function(a){this.body=a.body,this.author=a.author}),riot.tag("qcommentcontainer",'<newcomment></newcomment> <comment each="{ this.comments }"></comment>',function(a){this.providers=a.providers,this.pageID=a.pageID,this.FB=a.FB,this.user=a.user,this.dataset=FB.child("comments").child(pageID),this.dataset.on("value",function(a){this.comments=a.val()})});var FB=new Firebase("cjk-blog.firebaseio.com"),pageID=pageID||encodeURIComponent(window.location.pathname);riot.mount("qcommentcontainer",{providers:[{name:"facebook",login:function(){console.log("yay!")}}],pageID:pageID,comments:[{body:"bullshit",author:{name:"debbie downer",email:"d@q.org"}},{body:"cool, yo",author:{name:"somebody",email:"d@q.org"}}]});