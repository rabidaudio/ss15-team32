!function(a){"use strict";function b(a){var b,e=c(a.units),f=Date.now(),h=d(a.from,e,f),i=d(a.to,e,f),j=h-i;return j>=0?b="past":(b="future",j=-j),g(j,b,a.lang)}function c(a){if("undefined"==typeof a)return"ms";if("s"===a||"ms"===a)return a;throw new Error("Invalid units")}function d(a,b,c){if("undefined"==typeof a)return c;if("string"==typeof a&&(a=parseInt(a,10)),e(a)&&f(a))throw new Error("Invalid time");return"number"==typeof a&&"s"===b&&(a*=1e3),a}function e(a){return"[object Date]"!==Object.prototype.toString.call(a)||isNaN(a.getTime())}function f(a){return"number"!=typeof a||isNaN(a)}function g(a,b,c){var d,e,f=j[c]||j[k];for(d in i)if(i.hasOwnProperty(d)&&a>=i[d])return e=Math.floor(a/i[d]),f[b](e,f[d][(e>1)+0]);return f.defaults[b]}function h(){"function"==typeof define&&define.amd?define(function(){return l}):"undefined"!=typeof module&&null!==module?module.exports=l:a.vagueTime=l}var i={year:315576e5,month:26298e5,week:6048e5,day:864e5,hour:36e5,minute:6e4},j={br:{year:["ano","anos"],month:["mês","meses"],week:["semana","semanas"],day:["dia","dias"],hour:["hora","horas"],minute:["minuto","minutos"],past:function(a,b){return a+" "+b+" atrás"},future:function(a,b){return"em "+a+" "+b},defaults:{past:"agora mesmo",future:"em breve"}},da:{year:["år","år"],month:["måned","måneder"],week:["uge","uger"],day:["dag","dage"],hour:["time","timer"],minute:["minut","minutter"],past:function(a,b){return a+" "+b+" siden"},future:function(a,b){return"om "+a+" "+b},defaults:{past:"lige nu",future:"snart"}},de:{year:["Jahr","Jahren"],month:["Monat","Monaten"],week:["Woche","Wochen"],day:["Tag","Tagen"],hour:["Stunde","Stunden"],minute:["Minute","Minuten"],past:function(a,b){return"vor "+a+" "+b},future:function(a,b){return"in "+a+" "+b},defaults:{past:"jetzt gerade",future:"bald"}},en:{year:["year","years"],month:["month","months"],week:["week","weeks"],day:["day","days"],hour:["hour","hours"],minute:["minute","minutes"],past:function(a,b){return a+" "+b+" ago"},future:function(a,b){return"in "+a+" "+b},defaults:{past:"just now",future:"soon"}},fr:{year:["an","ans"],month:["mois","mois"],week:["semaine","semaines"],day:["jour","jours"],hour:["heure","heures"],minute:["minute","minutes"],past:function(a,b){return"il y a "+a+" "+b},future:function(a,b){return"dans "+a+" "+b},defaults:{past:"tout de suite",future:"bientôt"}},jp:{year:["年","年"],month:["ヶ月","ヶ月"],week:["週間","週間"],day:["日","日"],hour:["時間","時間"],minute:["分","分"],past:function(a,b){return a+" "+b+"前"},future:function(a,b){return a+" "+b+"後"},defaults:{past:"今",future:"すぐに"}},ko:{year:["년","년"],month:["개월","개월"],week:["주","주"],day:["일","일"],hour:["시간","시간"],minute:["분","분"],past:function(a,b){return a+" "+b+" 전"},future:function(a,b){return a+" "+b+" 후"},defaults:{past:"지금",future:"곧"}},nl:{year:["jaar","jaar"],month:["maand","maanden"],week:["week","weken"],day:["dag","dagen"],hour:["uur","uur"],minute:["minuut","minuten"],past:function(a,b){return a+" "+b+" geleden"},future:function(a,b){return"over "+a+" "+b},defaults:{past:"juist nu",future:"binnenkort"}},zh:{year:["年","年"],month:["个月","个月"],week:["周","周"],day:["天","天"],hour:["小时","小时"],minute:["分钟","分钟"],past:function(a,b){return a+" "+b+" 之前"},future:function(a,b){return"in "+a+" "+b},defaults:{past:"刚刚",future:"马上"}}},k="en",l={get:b};h()}(this),riot.tag("auth",'<div class="qc-user qc-logged-in" if="{ loggedIn }"> <p>Logged in. <a href="#" onclick="{ logout }">Log out</a></p> </div> <div if="{ loggedIn }"> <newcomment></newcomment> </div> <div class="qc-user qc-logged-out" if="{ !loggedIn }"> <p>Sign in to post a comment.</p> <ul class="qc-login-opts"> <li each="{ name, val in providers }" if="{ val.available }"> <a href="#" onclick="{ parent.login }" class="provider-{ name }">{ name }</a> </li> </ul> <hr></hr> </div>',function(){this.providers=this.opts.data,this.loggedIn=!!this.parent.currentUser();var a=this.parent.firebase;this.login=function(b){a.authWithOAuthPopup(b.item.name,this.authHandler)}.bind(this),this.logout=function(){a.unauth(),this.loggedIn=!1}.bind(this),this.authHandler=function(b,c){return b?void console.error(b):(a.child("users").child(c.uid).set(c),this.loggedIn=!0,void this.update())}.bind(this)}),riot.tag("comment",'<div class="qc-comment" id="comment/{ data.id }"> <div class="avatar"> <a href="{ data.author.url }"><img src="{ data.author.avatar }"></a> </div> <div class="qc-header"> <a href="{ data.author.url }" class="author">{ data.author.name }</a> <a href="#comment/{ data.id }" class="timestamp">{ new Date(data.time).toLocaleString() }</a> </div> <div class="qc-body">{ data.body }</div> <hr></hr> </div>',function(a){this.data=a.data}),riot.tag("newcomment",'<div class="qc-comment qc-new"> <form>      <textarea rows="{ height }" class="gc-new-body form-control" name="body" onfocus="{ grow }"></textarea>\n <button class="submit" name="submit" onclick="{ send }">Submit</button> </form> <hr></hr> </div>',function(){this.height=1,this.send=function(){if(!this.spamFree())throw"Can't save spammy comments";this.parent.parent.save(this),this.body.value="",this.shrink()}.bind(this),this.spamFree=function(){return!0}.bind(this),this.grow=function(){this.height=5}.bind(this),this.shrink=function(){this.height=1}.bind(this)}),riot.tag("qcommentcontainer",'<div class="qc-comments"> <auth data="{ opts.providers }"></auth> <comment each="{ comments }" data="{ this }"></comment> </div>',function(a){this.providers=a.providers,this.pageID=a.pageID,this.firebase=a.firebase,this.dataset=this.firebase.child("comments").child(this.pageID),this.comments=[],this.currentUser=function(){var a=this.firebase.getAuth();if(!a)return null;var b=a[a.provider].cachedUserProfile,c={};switch(c.name=a[a.provider].displayName,c.uid=a.uid,a.provider){case"facebook":c.avatar=b.picture.data.url,c.url=b.link;break;case"twitter":c.avatar=b.profile_image_url,c.url=b.url;break;case"github":c.avatar=b.avatar_url,c.url=b.html_url}return c}.bind(this),this.save=function(a){if(!this.currentUser())throw"Must be logged in to comment";this.dataset.push({author:this.currentUser(),time:Date.now(),body:a.body.value})}.bind(this),this.getComment=function(a){var b=a.val();return b.id=a.key(),b}.bind(this),this.addComment=function(a){var b=this.getComment(a);return this.comments.unshift(b),this.update()}.bind(this),this.updateComment=function(a){for(var b=this.getComment(a),c=this.comments.length;c-->0;)if(this.comments[c].id===b.id)return this.comments[c]=b,this.update()}.bind(this),this.removeComment=function(a){for(var b=this.getComment(a),c=this.comments.length;c-->0;)if(this.comments[c].id===b.id)return this.comments.splice(c,1),this.update()}.bind(this);var b=this.dataset.orderByChild("time").limitToFirst(a.limit);b.on("child_added",this.addComment),b.on("child_changed",this.updateComment),b.on("child_removed",this.removeComment)});var QC=function(a){if(!a)throw"Riot.js is required";var b={facebook:{type:"oauth",available:!0},github:{type:"oauth",available:!0},twitter:{type:"oauth",available:!0},google:{type:"oauth",available:!0},password:{available:!1},anonymous:{available:!1}};return function(c){if(!c.firebase)throw"Firebase is required";c.pageID=encodeURIComponent(c.pageID||window.location.pathname),c.limit=c.limit>0?c.limit:100;for(var d in c.authMethods)c.authMethods.hasOwnProperty(d)&&b.hasOwnProperty(d)&&(b[d].available=c.authMethods[d]);c.providers=b,a.mount("qcommentcontainer",c)}}(riot);